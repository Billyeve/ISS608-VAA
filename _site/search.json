[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3.html",
    "href": "Hands-on_Ex/Hands-on_Ex04.3.html",
    "title": "Hands-on Exercise 04.3",
    "section": "",
    "text": "Funnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities. By the end of this hands-on exercise, you will gain hands-on experience on:\n\nplotting funnel plots by using funnelPlotR package,\nplotting static funnel plot by using ggplot2 package, and\nplotting interactive funnel plot by using both plotly R and ggplot2 packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04.3.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 04.3",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\nIn this exercise, four R packages will be used. They are:\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04.3.html#importing-data",
    "title": "Hands-on Exercise 04.3",
    "section": "Importing Data",
    "text": "Importing Data\nIn this section, COVID-19_DKI_Jakarta will be used. The data was downloaded from Open Data Covid-19 Provinsi DKI Jakarta portal. For this hands-on exercise, we are going to compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\nThe code chunk below imports the data into R and save it into a tibble data frame object called covid19.\n\ncovid19 <- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %>%\n  mutate_if(is.character, as.factor)\n\nRows: 267 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): City, District, Sub-district\ndbl (4): Sub-district ID, Positive, Recovered, Death\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3.html#funnelplotr-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04.3.html#funnelplotr-methods",
    "title": "Hands-on Exercise 04.3",
    "section": "FunnelPlotR methods",
    "text": "FunnelPlotR methods\nFunnelPlotR package uses ggplot to generate funnel plots. It requires a numerator (events of interest), denominator (population to be considered) and group. The key arguments selected for customisation are:\n\nlimit: plot limits (95 or 99).\nlabel_outliers: to label outliers (true or false).\nPoisson_limits: to add Poisson limits to the plot.\nOD_adjust: to add overdispersed limits to the plot.\nxrange and yrange: to specify the range to display for axes, acts like a zoom function.\nOther aesthetic components such as graph title, axis labels etc.\n\n\nFunnelPlotR methods: The basic plot\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`\n)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nThings to learn from the code chunk above.\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is \"SR\".\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution.\n\n\n\nFunnelPlotR methods: Makeover 1\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #<<\n  xrange = c(0, 6500),  #<<\n  yrange = c(0, 0.05)   #<<\n)\n\nWarning: The `xrange` argument deprecated; please use the `x_range` argument\ninstead. For more options, see the help: `?funnel_plot`\n\n\nWarning: The `yrange` argument deprecated; please use the `y_range` argument\ninstead. For more options, see the help: `?funnel_plot`\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \nThings to learn from the code chunk above. + data_type argument is used to change from default \"SR\" to \"PR\" (i.e. proportions). + xrange and yrange are used to set the range of x-axis and y-axis\n\n\nFunnelPlotR methods: Makeover 2\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #<<           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #<<\n  y_label = \"Cumulative Fatality Rate\"  #<<\n)\n\nWarning: The `xrange` argument deprecated; please use the `x_range` argument\ninstead. For more options, see the help: `?funnel_plot`\n\n\nWarning: The `yrange` argument deprecated; please use the `y_range` argument\ninstead. For more options, see the help: `?funnel_plot`\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nThings to learn from the code chunk above.\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04.3.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands-on Exercise 04.3",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\nIn this section, you will gain hands-on experience on building funnel plots step-by-step by using ggplot2. It aims to enhance you working experience of ggplot2 to customise speciallised data visualisation like funnel plot.\n\nComputing the basic derived fields\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\ndf <- covid19 %>%\n  mutate(rate = Death / Positive) %>%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %>%\n  filter(rate > 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean <- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\nCalculate lower and upper limits for 95% and 99.9% CI\nThe code chunk below is used to compute the lower and upper limits for 95% confidence interval.\n\nnumber.seq <- seq(1, max(df$Positive), 1)\nnumber.ll95 <- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 <- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 <- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 <- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI <- data.frame(number.ll95, number.ul95, number.ll999, number.ul999, number.seq, fit.mean)\n\n\n\nPlotting a static funnel plot\nIn the code chunk below, ggplot2 functions are used to plot a static funnel plot.\n\np <- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\n\nWarning in geom_point(aes(label = `Sub-district`), alpha = 0.4): Ignoring\nunknown aesthetics: label\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\np\n\n\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\nThe funnel plot created using ggplot2 functions can be made interactive with ggplotly() of plotly r package.\n\nfp_ggplotly <- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3.html#references",
    "href": "Hands-on_Ex/Hands-on_Ex04.3.html#references",
    "title": "Hands-on Exercise 04.3",
    "section": "References",
    "text": "References\n\nfunnelPlotR package.\nFunnel Plots for Indirectly-standardised ratios.\nChanging funnel plot options\nggplot2 package."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01.html",
    "title": "Data Visualization Makeover 01",
    "section": "",
    "text": "The objective is to create Age-Sex Pyramid Analytic Visualization to accurately describe the demographic of Singapore. It is a common visual representation to contrast and sub sect the population based on different classifiers, commonly by gender and age. To further illustrate the visualization, multiple Age-Sex Pyramids will be plotted by planning area using the trellis display. \nThe visualization is created using the Singapore Residents by Planning Area / Sub-zone, Age Group, Sex and Type of Dwelling, June 2022 (Singstat)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#data-cleaning-and-preparation",
    "href": "Take-home_Ex/Take-home_Ex01.html#data-cleaning-and-preparation",
    "title": "Data Visualization Makeover 01",
    "section": "Data Cleaning and Preparation",
    "text": "Data Cleaning and Preparation\nTo ensure that the data is properly loaded and read, the following actions will be done in the raw excel file and tableau. \n\n\n\n\n\n\n\nACTION\nIMAGE\n\n\nFrom the raw excel file, remove the unnecessary rows as not to confuse the tableau reading\n\n\n\nLink the three sheets with the following identifiers:\n\nPlanning Area\nSubzone\nAge Group\nType of Dwelling\n\nRename 2022 as population (either total, male, female)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#original-visualization",
    "href": "Take-home_Ex/Take-home_Ex01.html#original-visualization",
    "title": "Data Visualization Makeover 01",
    "section": "Original Visualization",
    "text": "Original Visualization\nTrellis Display is a visualization framework aimed at easily presenting visual data in tables and box subdivided by category. The aim is to be able to compare and contrast the data based on the category in one window. \n\n\n\n\n\nThough the original visualization is a trellis display, there are some issues on the clarity, aesthetics, and interactive design of the original data visualization to be explained at the next section."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#visualization-critique",
    "href": "Take-home_Ex/Take-home_Ex01.html#visualization-critique",
    "title": "Data Visualization Makeover 01",
    "section": "Visualization Critique",
    "text": "Visualization Critique\nThe issues of the original visualization are as follows: \n\nClarity\n\na. Lack of Header and Titles\nThere is no title to explain the context of the visual. Users would not know the message of the visual at first glance. While an age sex pyramid is a common visual tool to indicate a split in gender population, it is not clear which population is being discussed unless the user is aware of the Planning Areas. Furthermore, though indicated as 2022 at the x-axis, it would have been clearer if it is included in the header or title. A simple title such as 2022 Singapore Age – Sex Pyramid would be enough to communicate the topic of the visual.\n\n\nb. Lack of Color Labels\nThe color of the back-to-back horizontal bar chart is the same between male and female values. This may confuse users as it may give the wrong impression that both bars may belong to a single elongated bar. It is proposed that color for both male and female to be separate and distinct, even if in the terms of different shade. \n\n\n\nAesthetic\n\nc. Poor Layout\nThe Trellis chart is organized horizontally and side by side and as such is visually difficult to read as there is an estimated 55 Planning Areas to scroll from. This difficult extends also to comparing multiple charts as there is only so much that can be shown per plane. It is recommended to create a table like trellis chart with rows and columns as to ease visualization and maximize space. \n\n\nd. Lack of differentiating color per Area\nSimilar to the back to back horizontal bar, the color between planning areas are also the same. To improve aesthetic, it is recommended that Planning Areas will have the same color while male to female bars with share the same color but of different shades.\n\n\ne. Too many Age Groups\nThe is an overall 19 age gaps that extends the chart and limits the number of planes that can be shown per window. It is recommended to group together the different age groups from 5 years to 10 years thus reducing the y axis by half and increase the number of charts that can be seen in one viewing. \n\n\n\nInteractive\nThere is an opportunity to create filters to limit and focus the dashboard to a select Area, Subzone and Dwelling Type. This opportunity can allow for a more interactive and dynamic analysis."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#proposed-design-of-trellis-chart",
    "href": "Take-home_Ex/Take-home_Ex01.html#proposed-design-of-trellis-chart",
    "title": "Data Visualization Makeover 01",
    "section": "Proposed Design of Trellis Chart",
    "text": "Proposed Design of Trellis Chart\n\n\n\n\n\n\nClarity\n\na. Proper Titles and Headers\nThe Age-Sex Pyramid Trellis Chart is titled correctly, indicating as 2022 Singapore Age-Sex Pyramid per Area. Furthermore, each Age-Sex Pyramid is labeled per Planning Area at the bottom right-hand corner of each plane. These labels ensure that users can properly read and identify the overall message of the chart and category of each individual pyramid. \nIt may be recommended to add value labels per bar to textually visualize the amount each chart, yet this step can be avoid as the chart allows for pop out labels and values to appear when hovering over the chart. Furthermore, on the design aspect, value labels will clutter the chart and cause it to be overly noisy. \n\n\nb. Differentiated Color Labels\nMale-Female bar colors are identified with different shades with the lighter colors indicating male and darker as female. This ensures visual differentiation between genders with ensuring some similarity within planning area.\n\n\n\nAesthetic\n\nc. 3 Column Tabular Trellis Chart\nThe Trellis Chart is organized to 3 columns to ensure that the pyramids are visually maximized both in terms of the number of pyramid charts in one viewing and the max value of the y-axis for the bars to be visually district.\n\n\nd. Differentiating Color per Area\nColors per Planning Area is colored differently to ensure distinct differentiation per pyramid. \n\n\ne. Simplified Age Groups\n19 age groups are reduced to 10 age groups to visually maximize the space of the plane without oversimplifying the data points. \n\n\n\nInteractive\nThe Trellis Chart can be filtered per Planning Area, Subzone and Type of Dwelling. This ensures interactive use of the chart and allow for more drilled down analysis of the data. Though there is a limitation as this chart cannot compare Subzones within the same Planning Area as can be an improvement for future developments."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#process-and-development",
    "href": "Take-home_Ex/Take-home_Ex01.html#process-and-development",
    "title": "Data Visualization Makeover 01",
    "section": "Process and Development",
    "text": "Process and Development\n\n\n\n\n\n\n\nACTION\nIMAGE\n\n\n\n\nTo create the Trellis Chart, the table must be created first determining the number of columns, indicated in the parameter - # of Col\n\n\n\nNext is to define the rows and columns field with the following formula:\n\nIndex – Index ()\nColumn – [Index]%[# of Col]\nRows – int(([Index]-1)/[# of Col])\n\nThen place the calculated values at the column and row fields\n\n\n\nTo ensure that the values are not inflated due to the addition of the Total category, recreate the set of the following dimensions by excluding the Total and HDB Total (for Type of Dwelling)\n\nPlanning Area\nSubzone\nType of Dwelling\n\n\n\n\nBuild the Trellis Chart with multiple Age-Sex Pyramid with the correct filters\n*remember to set the colors base on the gender and planning area\n\n\n\nCreate a 0 mark parameter to as a line with Planning Area as the label. Set the 0 mark as a dual axis and make the line transparent to set the Planning Area label"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#dashboard-overview",
    "href": "Take-home_Ex/Take-home_Ex01.html#dashboard-overview",
    "title": "Data Visualization Makeover 01",
    "section": "Dashboard Overview",
    "text": "Dashboard Overview\nBesides the Trellis Chart, additional charts are created as well to build a better interactive dashboard. Page 1 of the dashboard is to give an overview of Singapore 2022 population while Page 2 presents the Trellis Chart and Age-Sex Pyramids per Planning Area. \n\n\n\nPage 1\nPage 2\n\n\n\n\n\n\n\n\n\n\nMajor Findings\n\nOverall, Singapore has more females than males by est. 500,000 heavily contributed by the adult (25 and above) age group. Male population is 11 million while Female is 11.5 million. This is a stark contrast from previous years as there are more males in Singapore than females, average ratio at 53% male and 47% female. The shift in population shares maybe due to migration and the impact of COVID lockdown as male manpower migrating to the city state decreased during COVID and has not recovered since. \nMale and Female distribution per Planning Area and age group are almost equal except for the senior population. The close distribution maybe due to the equal economic opportunity for both genders in Singapore. Furthermore, top areas that are heavily populated by males are populated by females as well. \nThe data may be incomplete as 26 out of 55 (48%) of Total Planning Area have either no data or negligible data. This is evident that some area’s population data is missing and is not only limited to far east and far west areas such as Tuas, but high population city center such as Orchard has no data recorded as well. \n\nDashboard Link: https://public.tableau.com/views/DataVizMakeover01_16743910439700/TotalSingapore?:language=en-US&publish=yes&:display_count=n&:origin=viz_share_link"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02.html",
    "title": "Data Visualization Makeover 02",
    "section": "",
    "text": "The objective of this exercise is to critique and improve an Age-Sex Pyramid Analytic Visualization of Singapore of the year 2022. The output is to recreate a Trellis Chart Age-Sex Pyramid through R-Studios by using ggplot2, ggplot2 extensions and tidyverse packages.\nThe visualization is created using the Singapore Residents by Planning Area / Sub-zone, Age Group, Sex and Type of Dwelling, June 2022 (Singstat).\n\n\n\n\n\n\nNote\n\n\n\nThe output should be focused as a static Trellis Chart without filter interactivity.\n\n\n\n\nThe Original Visualization Source: https://public.tableau.com/app/profile/joseph.zexeong.tan/viz/SingaporePopulationPyramindJun2022v1_3/trel3x3_d?publish=yes\n\n\n\n\n\n\n\n\nThe Original Visualization shows 2 separate Age-Pyramid Trellis Chart that shows the same message. Two sets of visualization normally indicate that they visualize two different messages that may it be independent of each other or connected. The issue with the dashboard is that both sets indicate the same message just in a different format. This raises either confusion to the reader and a form of redundancy that can be best allocated to something else.\n3x3 Trellis Chart limits the visualization to only 9 Age-Sex Pyramids. Limited and focused visualizations are normally selected under a criteria. This criteria may be in terms of highest population cumulative or selective. The original visualization shows no indication of the criteria chosen to only visualize 9 areas and may only be concluded as a random selection.\n3x3 Trellis Chart lacks y-axis labels. Taking to consideration that the Trellis Charts is a stand alone visualization, the lack of y-axis label reduces the clarity of the y-axis values. Furthermore, both Trellis Charts lack x-axis values and labels but make up for it through text values per bar. In terms of clarity, one can argue that the lack of x-axis may confuse the reader due to the text values having no reference while others say the taxt vales are enough to compensate the lack of x-axis.\n\n\n\n\n\nText Values center bar alignment makes reading the values difficult. Due to the mismatched alignment of the text values brought abut by the central alignment placement in the bar chart makes reading the values difficult as the reader cannot simply scroll down and read the values, not mention creates unnecessary confusion in the graph.\nText Values on each Bar Chart overwhelms the visualization. More than the mismatch alignment, the number of the text values in the chart saturates the charts and makes it “noisy”. The text values fill the dashboard with a lot of numbers that is makes the labels and visuals difficult to look at and interpret.\nHorizontally arranged Trellis Chart limits and squeezes the Age-Sex Pyramids. This visualization arrangement artificially contorts the bar length due to the lack of width space. The squeeze minimizes the visual differentiation between bar charts as such creates an illusion that some bars are of the same size."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#getting-started---data-loading-and-processing",
    "href": "Take-home_Ex/Take-home_Ex02.html#getting-started---data-loading-and-processing",
    "title": "Data Visualization Makeover 02",
    "section": "Getting Started - Data Loading and Processing",
    "text": "Getting Started - Data Loading and Processing\n\nInstalling and loading the required libraries\nBefore we get started, it is important for us to ensure that the required R packages have been installed.\n\npacman::p_load(tidyverse,ggplot2,knitr, plotly, skimr, questionr, funModeling, sf, tmap, quanteda, NLP, ggiraph)\n\n\n\nImporting Data\nThis code chunk is to import the data from respopagesextod2022.csv file to the Quarto/R page.\n\npop_data <- read_csv(\"data/respopagesextod2022.csv\")\n\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThe CSV File contains the following columns:\n\n\n\n\n\n\n\n\nCOLUMN NAME\nDATA TYPE\nDESCRIPTION\n\n\n\n\nPlanning Area (PA)\nCharacter\nDistinct Planning Areas in Singapore designated and mapped by the Government of Singapore\n\n\nSubzone (SZ)\nCharacter\nSub-areas within each Planning Areas\n\n\nAge Group (AG)\nCharacter\nSets of population age group by 5 (ex 0-4, 5-9, etc)\n\n\nSex\nCharacter\nBinary biological identifier of gender\n\n\nType of Dwelling (TOD)\nCharacter\nAvailable dwelling types in Sinagpore\n\n\nPopulation (Pop)\nNumerical\nPopulation per category\n\n\nTime\nNumerical\nYear -> 2022\n\n\n\n\n\nData Exploration and Cleaning\nThis section is to check incorrect and missing values in the data set.\n\nskimr::skim(pop_data)\n\n\nData summary\n\n\nName\npop_data\n\n\nNumber of rows\n100928\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nPA\n0\n1\n4\n23\n0\n55\n0\n\n\nSZ\n0\n1\n4\n29\n0\n332\n0\n\n\nAG\n0\n1\n6\n11\n0\n19\n0\n\n\nSex\n0\n1\n5\n7\n0\n2\n0\n\n\nTOD\n0\n1\n6\n39\n0\n8\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPop\n0\n1\n40.44\n125.73\n0\n0\n0\n20\n2300\n▇▁▁▁▁\n\n\nTime\n0\n1\n2022.00\n0.00\n2022\n2022\n2022\n2022\n2022\n▁▁▇▁▁"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#create-age-sex-pyramid",
    "href": "Take-home_Ex/Take-home_Ex02.html#create-age-sex-pyramid",
    "title": "Data Visualization Makeover 02",
    "section": "Create Age-Sex Pyramid",
    "text": "Create Age-Sex Pyramid\nThis section explores the creation of an Age-Sex Pyramid.\n\nExploration of y-axis Data\n\nExp1 <- pop_data %>% \n  filter(PA == \"Ang Mo Kio\") %>%\n  group_by(AG, Sex) %>%\n  summarise(`sum_pop` = sum(`Pop`), n = n()) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'AG'. You can override using the `.groups`\nargument.\n\n\n\nggplot(data = Exp1,\n       aes(y = AG)) +\n  geom_bar() +\n  theme_bw() +  \n  ggtitle(\"Test: Age Group Distribution\") \n\n\n\n\nBased on the y-axis (Age Group), 2 issues are noticed:\n\nEach Age Group is written with an underscore (“_”) instead of a space in between each word/number\nThe values are organized alphabetically with consideration of the starting value (number or alphabet). As such “5_to_9” came before “45_to_49”\n\n\nCorrecting Age Labels\n\npop_data$AG <- gsub(\"_\", \" \", pop_data$AG, fixed = TRUE)\n\n\n\nCorrecting Sequence\n\nage_correct <- c(\"0 to 4\", \"5 to 9\", \"10 to 14\", \"15 to 19\", \"20 to 24\", \"25 to 29\", \"30 to 34\", \"35 to 39\", \"40 to 44\", \"45 to 49\", \"50 to 54\", \"55 to 59\", \"60 to 64\", \"65 to 69\", \"70 to 74\", \"75 to 79\", \"80 to 84\", \"85 to 89\", \"90 and over\")\n\npop_sg <- pop_data %>%\n  group_by(AG, Sex) %>%\n  summarise(`sum_pop` = sum(`Pop`)) %>%\n  mutate(AG = factor(AG, levels = age_correct)) %>%\n  arrange(AG) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'AG'. You can override using the `.groups`\nargument.\n\npop_sg <- pop_sg %>%\n  mutate(pct = scales::percent((sum_pop/sum(sum_pop)), accuracy = 0.01),\n         res = str_c(sum_pop, \", \", pct))\n\npop_pa <- pop_data %>%\n  group_by(PA, AG, Sex) %>%\n  summarise(`sum_pop` = sum(`Pop`)) %>%\n  mutate(AG = factor(AG, levels = age_correct)) %>%\n  arrange(AG) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'PA', 'AG'. You can override using the\n`.groups` argument.\n\npop_pa <- pop_pa %>%\n  mutate(pct = scales::percent((sum_pop/sum(sum_pop)), accuracy = 0.01),\n         res = str_c(sum_pop, \", \", pct))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#creating-a-age-sex-pyramid",
    "href": "Take-home_Ex/Take-home_Ex02.html#creating-a-age-sex-pyramid",
    "title": "Data Visualization Makeover 02",
    "section": "Creating a Age-Sex Pyramid",
    "text": "Creating a Age-Sex Pyramid\nThis section explores the visualization of an Age-Sex Pyramid.\n\n\n\n\n\n\nNote\n\n\n\nThis section will be using the total Singapore data (cummulative of all Planning Area)\n\n\n\nSG_Pyr <- ggplot(pop_sg,\n                    aes(x = ifelse(Sex == \"Males\", \n                                   yes = sum_pop*(-1),\n                                   no = sum_pop),\n                        y = AG,\n                        fill = Sex)) + \n  geom_col() +\n  scale_x_continuous(limits = c(-170000, 170000),\n    breaks = seq(-200000, 200000, 50000), \n                     labels = paste0(\n                       as.character(\n                         c(seq(200, 0, -50), \n                           seq(50, 200, 50))),\n                       \"k\")) +\n  scale_y_discrete(expand = expansion(mult = c(0, 0.01))) +\n  labs (x = \"Count of Population\", \n        y = \"Age Group\",\n        fill = \"Gender\",\n        title = \"Singapore Population Pyramid 2022\",\n        subtitle = \"Distribution of gender and age groups\",\n        caption = \"Data Source : Singstat.gov.sg, June 2022\") +\n  theme_bw() +\n  theme(plot.title = element_text(size = 14, \n                                  colour = \"#424242\",\n                                  face = \"bold\",\n                                  hjust = 0.5),\n        plot.subtitle = element_text(size = 8,\n                                     colour = \"#424242\",\n                                     hjust = 0.5),\n        plot.caption = element_text(size = 5,\n                                    colour = \"#424242\",\n                                    hjust = 0),\n        axis.ticks = element_line(colour = \"#424242\",\n                                  linewidth = 0.1),\n        axis.title.y = element_text(angle = 0, \n                                    size = 8, \n                                    colour = \"#424242\",\n                                    face = \"bold\",\n                                    vjust = 1.05,\n                                    hjust = 1,\n                                    margin = margin(r = -40, l = 10)),\n        axis.title.x = element_text(size = 8, \n                                    colour = \"#424242\",\n                                    face = \"bold\"),\n        axis.text.x = element_text(size = 7,\n                                   colour = \"#424242\"),\n        axis.text.y = element_text(size = 7,\n                                   colour = \"#424242\"),\n        legend.position = \"bottom\",\n        legend.justification = \"left\",\n        legend.text = element_text(size = 7,\n                                   colour = \"#424242\"),\n        legend.title = element_text(size = 8, \n                                    colour = \"#424242\"),\n        panel.grid.major = element_line(linewidth = rel(0.5)),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#ffffff\"),\n        legend.background = element_rect(fill = \"#ffffff\"),\n        legend.margin = margin(t = -10),\n        panel.border = element_rect(colour = \"#424242\",\n                                    linewidth = 0.3)) \n  \nSG_Pyr"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#creating-a-trellis-age-sex-pyramid",
    "href": "Take-home_Ex/Take-home_Ex02.html#creating-a-trellis-age-sex-pyramid",
    "title": "Data Visualization Makeover 02",
    "section": "Creating A Trellis Age-Sex Pyramid",
    "text": "Creating A Trellis Age-Sex Pyramid\nThis section explores the visualization of an Age-Sex Pyramid within a Trellis Chart. Each Pyramid indicates per Planning Area.\n\nRemoving Planning Areas without Values\nIt was previously identified that 26 out of 55 Planning Areas have no value/data. To maximize space, 9 Planning Areas will be retained and filtered.\n\n\n\n\n\n\nNote\n\n\n\nDue to the limitations of space in r generated visualization in quarto only a limited number of planning areas can be shown\n\n\n\nt_pop_pa <- pop_data %>%\n  group_by(PA) %>%\n  summarise(`sum_pop` = sum(`Pop`)) %>%\n  ungroup()\n\ntrellis9 <- arrange(t_pop_pa, desc(t_pop_pa$sum_pop)) %>%\n  slice(1:9) %>%\n  select(PA)\n\ntrellis9_filter <- pop_pa %>%\n  filter(pop_pa$PA %in% trellis9$PA)\n\n\n\nCreating Trellis Chart Age-Sex Pyramid\n\nPA_Pyr <- ggplot() +\n  geom_bar(data = subset(trellis9_filter, \n                         Sex == \"Males\"), \n           aes(x = AG, \n               y = -sum_pop, \n               fill = PA),\n           stat = \"identity\", \n           fill = \"#2E9598\") +\n  geom_bar(data = subset(trellis9_filter, \n                         Sex == \"Females\"), \n           aes(x = AG, \n               y = sum_pop, \n               fill = PA), \n           stat = \"identity\", \n           fill = \"#EC1B4B\") +\n  coord_flip() +\n  facet_wrap(.~ PA,\n             drop = FALSE, \n             ncol = 3,\n             scales = \"fixed\")+\n  scale_y_continuous(limits = c(-13000, 13000),\n                     breaks = seq(-20000, 20000, 5000), \n                     labels = paste0(\n                       as.character(\n                         c(seq(200, 0, -50), \n                           seq(50, 200, 50))),\n                       \"k\"), \n                     expand = expansion(mult = c(0, .04)))+\n  labs (y = \"Population\", \n        x = \"Age Group\",\n        fill = \"Gender\",\n        title = \"Singapore Population Pyramid 2022\",\n        subtitle = \"Distribution of gender and age groups from Most Populated Planning Areas\",\n        caption = \"Data Source : Singstat.gov.sg, June 2022\") +\n  theme_bw() +\n  theme(plot.title = element_text(size = 14, \n                                  colour = \"#424242\",\n                                  face = \"bold\",\n                                  hjust = 0.5),\n        plot.subtitle = element_text(size = 8,\n                                     colour = \"#424242\",\n                                     hjust = 0.5),\n        plot.caption = element_text(size = 8,\n                                    colour = \"#424242\",\n                                    hjust = 0),\n        strip.text = element_text(size = 7,\n                                  colour = \"#424242\"),\n        strip.background = element_blank(),\n\n        axis.ticks = element_line(colour = \"#424242\",\n                                  linewidth = 0.5),\n        axis.ticks.x = element_line(colour = \"#424242\",\n                                  linewidth = 0.5),,\n        axis.title.y = element_text(angle = 0, \n                                    size = 8, \n                                    colour = \"#424242\",\n                                    vjust = 1.025,\n                                    hjust = 0.7,\n                                    margin = margin(r = -20, l = 20)),\n        axis.title.x = element_text(size = 8, \n                                    colour = \"#424242\"),\n        axis.text.x = element_text(size = 4,\n                                   colour = \"#424242\"),\n        axis.text.y = element_text(size = 4,\n                                   colour = \"#424242\"),\n        legend.position = \"bottom\",\n        legend.justification = \"left\",\n        legend.text = element_text(size = 5,\n                                   colour = \"#424242\"),\n        legend.title = element_text(size = 8, \n                                    colour = \"#424242\"),\n        panel.grid.major = element_line(linewidth = rel(0.5)),\n        panel.grid.major.x = element_line(linewidth = rel(0.5)),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#ffffff\"),\n        legend.background = element_rect(fill = \"#ffffff\"),\n        legend.margin = margin(t = -10),\n        panel.border = element_rect(colour = \"#424242\",\n                                    linewidth = 0.3)) \n\nPA_Pyr\n\n\n\n\n\n\nLearning from Practice\n\nClarity\n\nWith the subtitle indicating that these Planning Areas are the most populous in Singapore, the reader is more clear of the message. Not to mention that axis labels and ticks are present to further provide clarity.\nDue to the limitation of space, a 3x3 Trellis Chart may be the maximum representation that can at least maximize readability. Adding more Age-Sex Pyramids will diminish readability and make the chart more difficult to interpret. Furthermore, the limits in size also affects the font sizes, thus reducing clarity and readability.\n\n\n\nAesthetic\n\nThe removal of bar numbers lessens the elements present in the visualization and makes in more pleasing to look at. This less “noisy” visualization greatly improves its aesthetic and design.\n\n\n\nInteractivity\n\nCrafting the visualization in R Studios is more difficult and restrictive as the limits in visual size restrict creative and engaging visuals. Furthermore, transitioning to interactivity may be difficult in the future as the limitations may complicate it further. Future visualization may be better crafted in R Shiny instead of quarto/R Studios."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#further-improvements-and-developments",
    "href": "Take-home_Ex/Take-home_Ex02.html#further-improvements-and-developments",
    "title": "Data Visualization Makeover 02",
    "section": "Further Improvements and Developments",
    "text": "Further Improvements and Developments\nThis section improves upon the original visualization by increasing size and adding interactivity.\n\nIncreasing Visualization Size\n\n\nCode\nPA_Pyr <- ggplot() +\n  geom_bar(data = subset(trellis9_filter, \n                         Sex == \"Males\"), \n           aes(x = AG, \n               y = -sum_pop, \n               fill = PA),\n           stat = \"identity\", \n           fill = \"#2E9598\") +\n  geom_bar(data = subset(trellis9_filter, \n                         Sex == \"Females\"), \n           aes(x = AG, \n               y = sum_pop, \n               fill = PA), \n           stat = \"identity\", \n           fill = \"#EC1B4B\") +\n  coord_flip() +\n  facet_wrap(.~ PA,\n             drop = FALSE, \n             ncol = 3,\n             scales = \"fixed\")+\n  scale_y_continuous(limits = c(-13000, 13000),\n                     breaks = seq(-20000, 20000, 5000), \n                     labels = paste0(\n                       as.character(\n                         c(seq(200, 0, -50), \n                           seq(50, 200, 50))),\n                       \"k\"), \n                     expand = expansion(mult = c(0, .04)))+\n  labs (y = \"Population\", \n        x = \"Age Group\",\n        fill = \"Gender\",\n        title = \"Singapore Population Pyramid 2022\",\n        subtitle = \"Distribution of gender and age groups from Most Populated Planning Areas\",\n        caption = \"Data Source : Singstat.gov.sg, June 2022\") +\n  theme_bw() +\n  theme(plot.title = element_text(size = 20, \n                                  colour = \"#424242\",\n                                  face = \"bold\",\n                                  hjust = 0.5),\n        plot.subtitle = element_text(size = 14,\n                                     colour = \"#424242\",\n                                     hjust = 0.5),\n        plot.caption = element_text(size = 12,\n                                    colour = \"#424242\",\n                                    hjust = 0),\n        strip.text = element_text(size = 12,\n                                  colour = \"#424242\"),\n        strip.background = element_blank(),\n\n        axis.ticks = element_line(colour = \"#424242\",\n                                  linewidth = 0.5),\n        axis.ticks.x = element_line(colour = \"#424242\",\n                                  linewidth = 0.5),,\n        axis.title.y = element_text(angle = 0, \n                                    size = 12, \n                                    colour = \"#424242\",\n                                    vjust = 1.025,\n                                    hjust = 0.7,\n                                    margin = margin(r = -50, l = 50)),\n        axis.title.x = element_text(size = 12, \n                                    colour = \"#424242\"),\n        axis.text.x = element_text(size = 10,\n                                   colour = \"#424242\"),\n        axis.text.y = element_text(size = 10,\n                                   colour = \"#424242\"),\n        legend.position = \"bottom\",\n        legend.justification = \"left\",\n        legend.text = element_text(size = 12,\n                                   colour = \"#424242\"),\n        legend.title = element_text(size = 12, \n                                    colour = \"#424242\"),\n        panel.grid.major = element_line(linewidth = rel(0.5)),\n        panel.grid.major.x = element_line(linewidth = rel(0.5)),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#ffffff\"),\n        legend.background = element_rect(fill = \"#ffffff\"),\n        legend.margin = margin(t = -10),\n        panel.border = element_rect(colour = \"#424242\",\n                                    linewidth = 0.3)) \n\nPA_Pyr\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nAdditional Codes:\nTo Increase Visualization size:\n#| fig-height: 12 #| fig-width: 12\nTo allow option to hide codes upon render:\n#| code-fold: true\n\n\n\n\nAdding Visualization\nThis section applies the ggiraph package to add interactive visualization per Bar within the Age Sex Pyramid.\n\n\nCode\nPA_Pyr <- ggplot() +\n  geom_bar_interactive(data = subset(trellis9_filter, \n                         Sex == \"Males\"), \n                       aes(x = AG, \n                           y = -sum_pop, \n                           fill = PA,\n                           tooltip =  paste0(\"Sex= \", Sex,\n  \"\\n Age Group= \", AG,\n  \"\\n Population= \", sum_pop)),\n                       stat = \"identity\", \n                       fill = \"#2E9598\") +\n  geom_bar_interactive(data = subset(trellis9_filter, \n                         Sex == \"Females\"), \n                       aes(x = AG, \n                           y = sum_pop, \n                           fill = PA,\n                           tooltip =  paste0(\"Sex= \", Sex,\n  \"\\n Age Group= \", AG,\n  \"\\n Population= \", sum_pop)), \n                       stat = \"identity\", \n                       fill = \"#EC1B4B\") +\n  coord_flip() +\n  facet_wrap(.~ PA,\n             drop = FALSE, \n             ncol = 3,\n             scales = \"fixed\")+\n  scale_y_continuous(limits = c(-13000, 13000),\n                     breaks = seq(-20000, 20000, 5000), \n                     labels = paste0(\n                       as.character(\n                         c(seq(200, 0, -50), \n                           seq(50, 200, 50))),\n                       \"k\"), \n                     expand = expansion(mult = c(0, .04)))+\n  labs (y = \"Population\", \n        x = \"Age Group\",\n        fill = \"Gender\",\n        title = \"Singapore Population Pyramid 2022\",\n        subtitle = \"Distribution of gender and age groups from Most Populated Planning Areas\",\n        caption = \"Data Source : Singstat.gov.sg, June 2022\") +\n  theme_bw() +\n  theme(plot.title = element_text(size = 36, \n                                  colour = \"#424242\",\n                                  face = \"bold\",\n                                  hjust = 0.5),\n        plot.subtitle = element_text(size = 28,\n                                     colour = \"#424242\",\n                                     hjust = 0.5),\n        plot.caption = element_text(size = 24,\n                                    colour = \"#424242\",\n                                    hjust = 0),\n        strip.text = element_text(size = 24,\n                                  colour = \"#424242\"),\n        strip.background = element_blank(),\n\n        axis.ticks = element_line(colour = \"#424242\",\n                                  linewidth = 0.5),\n        axis.ticks.x = element_line(colour = \"#424242\",\n                                  linewidth = 0.5),,\n        axis.title.y = element_text(angle = 0, \n                                    size = 24, \n                                    colour = \"#424242\",\n                                    vjust = 1.025,\n                                    hjust = 0.7,\n                                    margin = margin(r = -90, l = 90)),\n        axis.title.x = element_text(size = 24, \n                                    colour = \"#424242\"),\n        axis.text.x = element_text(size = 20,\n                                   colour = \"#424242\"),\n        axis.text.y = element_text(size = 20,\n                                   colour = \"#424242\"),\n        legend.position = \"bottom\",\n        legend.justification = \"left\",\n        legend.text = element_text(size = 24,\n                                   colour = \"#424242\"),\n        legend.title = element_text(size = 24, \n                                    colour = \"#424242\"),\n        panel.grid.major = element_line(linewidth = rel(0.5)),\n        panel.grid.major.x = element_line(linewidth = rel(0.5)),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#ffffff\"),\n        legend.background = element_rect(fill = \"#ffffff\"),\n        legend.margin = margin(t = -10),\n        panel.border = element_rect(colour = \"#424242\",\n                                    linewidth = 0.3)) \n\ngirafe(\n  ggobj = PA_Pyr,\n  width_svg = 24,\n  height_svg = 36*0.618\n)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03.html",
    "href": "In-Class_Ex/In-Class_Ex03.html",
    "title": "In-Class Exercise 03",
    "section": "",
    "text": "Two packages will be installed and loaded. They are tidyverse and ggiraph.\n\npacman::p_load(ggiraph, tidyverse)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03.html#importing-data",
    "href": "In-Class_Ex/In-Class_Ex03.html#importing-data",
    "title": "In-Class Exercise 03",
    "section": "Importing Data",
    "text": "Importing Data\nThis code chunk is to import the data from Exam_data.csv file to the Quarto/R page.\n\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03.html#exploration-and-trial",
    "href": "In-Class_Ex/In-Class_Ex03.html#exploration-and-trial",
    "title": "In-Class Exercise 03",
    "section": "Exploration and Trial",
    "text": "Exploration and Trial\n\nGraphs and Visualization through ggplot2 and ggiraph\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04.html",
    "href": "In-Class_Ex/In-Class_Ex04.html",
    "title": "In-Class Exercise 03",
    "section": "",
    "text": "This is a walk through of In-Class Exercise 4"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04.html#getting-started---plotly-and-statistical-visualization",
    "href": "In-Class_Ex/In-Class_Ex04.html#getting-started---plotly-and-statistical-visualization",
    "title": "In-Class Exercise 03",
    "section": "Getting Started - Plotly and Statistical Visualization",
    "text": "Getting Started - Plotly and Statistical Visualization\n\nInstalling and Loading R Packages\n\npacman::p_load(plotly, DT, patchwork, crosstalk, ggstatsplot, readxl, performance, parameters, see, tidyverse)\n\n\n\nImporting Data\nThis code chunk is to import the data from Exam_data.csv file to the Quarto/R page.\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\nWorking with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\nCreating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\nggplotly(p)\n\n\n\n\n\n\n\nTwo-sample mean test: ggbetweenstats()\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\nSignificant Test of Correlation: ggscatterstats()\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04.html#getting-started---visualizing-models",
    "href": "In-Class_Ex/In-Class_Ex04.html#getting-started---visualizing-models",
    "title": "In-Class Exercise 03",
    "section": "Getting Started - Visualizing Models",
    "text": "Getting Started - Visualizing Models\n\nInstalling and Loading R Packages\n\npacman::p_load(plotly, DT, patchwork, crosstalk, ggstatsplot, readxl, performance, parameters, see, tidyverse)\n\n\n\nImporting Data\nIn the code chunk below, read_xls() of readxl package is used to import the data worksheet of ToyotaCorolla.xls workbook into R.\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\n\nMultiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nModel Diagnostic: checking for multicolinearity:\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\nModel Diagnostic: checking normality assumption\nIn the code chunk, check_normality() of performance package.\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)\n\n\n\n\n\n\nModel Diagnostic: Check model for homogeneity of variances\nIn the code chunk, check_heteroscedasticity() of performance package.\n\ncheck_h <- check_heteroscedasticity(model1)\n\nplot(check_h)\n\n\n\n\n\n\nModel Diagnostic: Complete check\nWe can also perform the complete by using check_model().\n\ncheck_model(model1)\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggplot2 methods\nThe code chunk below performs the followings:\n\ngroup the observation by RACE,\ncomputes the count of observations, mean, standard deviation and standard error of Maths by RACE, and\nsave the output as a tibble data table called my_sum.\n\n\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438 \n  \n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggplot2 methods\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE,-mean), \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.95, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"95% confidence interval of mean maths score by race\")\n\n\n\n\n\np <- ggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE,-mean), \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.99, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"99% confidence interval of mean maths score by race\")\n\npp <- highlight(ggplotly(p))\n\nd <- highlight_key(my_sum)\n\ncrosstalk::bscols(pp,\n                  DT::datatable(d))"
  }
]