[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 01",
    "section": "",
    "text": "tidyverse is an opinionated collection of R packages designed for data science. All packages share an underlying design philosophy, grammar, and data structures.\n\n\n\n\ndplyr is a grammar of data manipulation, providing a consistent set of verbs that help you solve the most common data manipulation challenges.\ntidyr helps R users to create tidy data.\nstringr provides a cohesive set of functions designed to make working with strings as easy as possible.\nforcats provides a suite of tools that solve common problems with factors, including changing the order of levels or the values.\n\n\n\nreadr provides a fast and friendly way to read rectangular data (like csv, tsv, and fwf).\ntibble is a modern reimagining of the data.frame, keeping what time has proven to be effective, and throwing out what is not.\nggplot2 is a system for declaratively creating graphics, based on The Grammar of Graphics.\npurrr enhances R’s functional programming (FP) toolkit by providing a complete and consistent set of tools for working with functions and vectors.\n\n\n\n\n\nReference: Introduction to the Tidyverse: How to be a tidy data scientist.\n\n\n\n\n\nBefore we get started, it is important for us to ensure that the required R packages have been installed. If yes, we will load the R packages. If they have yet to be installed, we will install the R packages and load them onto R environment.\n\npacman::p_load(tidyverse)\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk on the right assumes that you already have pacman package installed. If not, please go ahead install pacman first.\n\n\n\n\n\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-on Exercise 01",
    "section": "R Graphics VS ggplot",
    "text": "R Graphics VS ggplot\n\nR Graphics\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\nggplot2\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\nThen, why ggplot2\n\n\n\n\n\n\nNote\n\n\n\nThe transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive.\nHadley Wickham\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#grammar-of-graphics",
    "title": "Hands-on Exercise 01",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\n\nWilkinson, L. (1999) Grammar of Graphics, Springer.\nThe grammar of graphics is an answer to a question:\n\n\nWhat is a statistical graphic?\n\nGrammar of graphics defines the rules of structuring mathematical and aesthetic elements into a meaningful graph.\nTwo principles\n\nGraphics = distinct layers of grammatical elements\nMeaningful plots through aesthetic mapping\n\n\n\n\nA good grammar will allow us to gain insight into the composition of complicated graphics, and reveal unexpected connections between seemingly different graphics (Cox 1978).\nA grammar provides a strong foundation for understanding a diverse range of graphics.\nA grammar may also help guide us on what a well-formed or correct graphic looks like, but there will still be many grammatically correct but nonsensical graphics."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2",
    "title": "Hands-on Exercise 01",
    "section": "Essential Grammatical Elements in ggplot2",
    "text": "Essential Grammatical Elements in ggplot2\nA Layered Grammar of Graphics\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background.\n\n\nReference: Hadley Wickham (2010) “A layered grammar of graphics.” Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28.\n\nThe ggplot() function and data argument\n\nLet us call the ggplot() function using the code chunk on the right.\nNotice that a blank canvas appears.\nggplot() initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\nIf the dataset is not already a data.frame, it will be converted to one by fortify().\n\n\nggplot(data=exam_data)\n\n\n\n\n\n\nThe Aesthetic mappings\n\nThe aesthetic mappings take attributes of the data and and use them to influence visual characteristics, such as position, colour, size, shape, or transparency.\nEach visual characteristic can thus encode an aspect of the data and be used to convey information.\nAll aesthetics of a plot are specified in the aes() function call (in later part of this lesson, you will see that each geom layer can have its own aes specification)\n\n\n\nWorking with aes()\n\nThe code chunk on the right add the aesthetic element into the plot.\n\n\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\nNotice that ggplot includes the x-axis and the axis’s label.\n\n\n\nGeometric Objects: geom\n\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g. a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\n\n\n\nA plot must have at least one geom; there is no upper limit. You can add a geom to a plot using the + operator.\nFor complete list, please refer to here.\n\n\n\nGeometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\nGeometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\n\n\n\n\n\n\nWarning\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\n\n\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\nGeometric Objects: geom_histogram()\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the default bin is 30.\n\n\n\n\nModifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\nModifying a geometric object by changing aes()\n\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric.\n\n\n\n\nGeometric Objects: geom-density\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nReference: Kernel density estimation\nThe code chunk below plots two kernel density lines by using color or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\nGeometric Objects: geom_boxplot\n\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().]\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\nReference: Notched Box Plots.\n\n\ngeom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +              #<<      \n  geom_point(position=\"jitter\", #<<\n             size = 0.5)        #<<\n\n\n\n\n\n\nGeometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\nGeometric Objects: geom_violin() and geom_boxplot()\nThe code chunk below combined a violin plot and a boxplot to show the distribution of Maths scores by gender.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin(fill=\"light blue\") +\n  geom_boxplot(alpha=0.5)           \n\n\n\n\n\n\nGeometric Objects: geom_point()\n\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\nStatistics, stat\n\nThe Statistics functions statistically transform data, usually as some form of summary. For example:\n\nfrequency of values of a variable (bar graph)\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\n\nWorking with stat\n\nThe boxplots on the right are incomplete because the positions of the means were not shown.\nNext two slides will show you how to add the mean values on the boxplots.\n\n\n\n\nWorking with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)               \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\n\nWorking with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)          \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`\n\n\n\n\n\n\n\nHow to add a best fit curve on a scatterplot?\n\nThe scatterplot on the right shows the relationship of Maths and English grades of pupils.\nThe interpretability of this graph can be improved by adding a best fit curve.\n\n\nIn the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nThe default method used is loess.\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nFacets\n\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data.\nFacets are an alternative to aesthetics for displaying additional discrete variables.\nggplot2 supports two types of factes, namely: facet_grid() and facet_wrap.\n\n\n\nfacet_wrap()\n\nfacet_wrap wraps a 1d sequence of panels into 2d.\nThis is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\n\n\n\nWorking with facet_wrap()\nThe code chunk below plots a trellis plot using facet-wrap().\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\nfacet_grid() function\n\nfacet_grid() forms a matrix of panels defined by row and column facetting variables.\nIt is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\n\n\n\nWorking with facet_grid()\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\n\nWorking with facet\n\n\n\n\n\n\nNote\n\n\n\nPlot a trellis boxplot looks similar to the figure below.\n\n\n\nThe solution:\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= CLASS)) +\n  geom_boxplot() +\n  facet_grid(~ GENDER)\n\n\n\n\n\n\n\nWorking with facet\n\n\n\n\n\n\nNote\n\n\n\nPlot a trellis boxplot looks similar to the figure below.\n\n\n\nThe solution:\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= CLASS)) +\n  geom_boxplot() +\n  facet_grid(GENDER ~.)\n\n\n\n\n\n\n\nWorking with facet\n\n\n\n\n\n\nNote\n\n\n\nPlot a trellis boxplot looks similar to the figure below.\n\n\n\nThe solution:\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n    facet_grid(GENDER ~ CLASS)\n\n\n\n\n\n\n\nCoordinates\n\nThe Coordinates functions map the position of objects onto the plane of the plot.\nThere are a number of different possible coordinate systems to use, they are:\n\ncoord_cartesian(): the default cartesian coordinate systems, where you specify x and y values (e.g. allows you to zoom in or out).\ncoord_flip(): a cartesian system with the x and y flipped.\ncoord_fixed(): a cartesian system with a “fixed” aspect ratio (e.g. 1.78 for a “widescreen” plot).\ncoord_quickmap(): a coordinate system that approximates a good aspect ratio for maps.\n\n\n\n\nWorking with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\nHow to change to the y- and x-axis range?\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nThemes\n\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\nBuilt-in themes include:\n\ntheme_gray() (default)\ntheme_bw()\ntheme_classic()\n\nA list of theme can be found at this link.\nEach theme element can be conceived of as either a line (e.g. x-axis), a rectangle (e.g. graph background), or text (e.g. axis title).\n\n\n\nWorking with theme\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\nA horizontal bar chart plotted using theme_classic().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nPlot a horizontal bar chart looks similar to the figure below.\n\nChanging the colors of plot panel background of theme_minimal() to light blue and the color of grid lines to white.\n\n\n\n\nThe solution\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(panel.background = element_rect(\n    fill = \"lightblue\",\n    colour = \"lightblue\",\n    size = 0.5,\n    linetype = \"solid\"),\n    panel.grid.major = element_line(\n      size = 0.5,\n      linetype = 'solid',\n      colour = \"white\"), \n    panel.grid.minor = element_line(\n      size = 0.25,\n      linetype = 'solid',\n      colour = \"white\"))\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#designing-data-drive-graphics-for-analysis-i",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#designing-data-drive-graphics-for-analysis-i",
    "title": "Hands-on Exercise 01",
    "section": "Designing Data-drive Graphics for Analysis I",
    "text": "Designing Data-drive Graphics for Analysis I\n\nThe original design\nA simple vertical bar chart for frequency analysis. Critics:\n\ny-aixs label is not clear (i.e. count)\nTo support effective comparison, the bars should be sorted by their resepctive frequencies.\nFor static graph, frequency values should be added to provide addition information.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nWith reference to the critics on the earlier slide, create a makeover looks similar to the figure on the right.\n\n\n\nggplot(data=exam_data,\n       aes(x=reorder(RACE,RACE,\n                function(x)-length(x))))+\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n\nThe makeover design\nThis code chunk uses fct_infreq() of forcats package.\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\nCredit: I learned this trick from Getting things into the right order of Prof. Claus O. Wilke, the author of Fundamentals of Data Visualization"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#designing-data-drive-graphics-for-analysis-ii",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#designing-data-drive-graphics-for-analysis-ii",
    "title": "Hands-on Exercise 01",
    "section": "Designing Data-drive Graphics for Analysis II",
    "text": "Designing Data-drive Graphics for Analysis II\n\nThe original design\n\n\n\n\n\n\n\nNote\n\n\n\n\nAdding mean and median lines on the histogram plot.\nChange fill color and line color\n\n\n\nThe code chunk:\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(MATHS,\n                                 na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=1) +\n  geom_vline(aes(xintercept=median(MATHS,\n                                  na.rm=T)),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             size=1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#designing-data-drive-graphics-for-analysis-iii",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#designing-data-drive-graphics-for-analysis-iii",
    "title": "Hands-on Exercise 01",
    "section": "Designing Data-drive Graphics for Analysis III",
    "text": "Designing Data-drive Graphics for Analysis III\n\nThe original design\nThe histograms on the left are elegantly designed but not informative. This is because they only reveal the distribution of English scores by gender but without context such as all pupils.\n\n\n\n\n\n\n\nImportant\n\n\n\nCreate a makeover looks similar to the figure below. The background histograms show the distribution of English scores for all pupils.\n\n\n\nThe code chunk\n\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, fill = \"grey\", alpha = .5) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  guides(fill = FALSE) +  \n  theme_bw()\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#designing-data-drive-graphics-for-analysis-iv",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#designing-data-drive-graphics-for-analysis-iv",
    "title": "Hands-on Exercise 01",
    "section": "Designing Data-drive Graphics for Analysis IV",
    "text": "Designing Data-drive Graphics for Analysis IV\n\nThe original design.\n\n\n\n\n\n\n\nImportant\n\n\n\nCreate a makeover looks similar to the figure on the right.\n\n\nA within group scatterplot with reference lines.\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1) + \n  geom_vline(xintercept=50, \n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 - VAA",
    "section": "",
    "text": "Hello there,\nThis is my Quarto/Netify Page, documenting my academic studies in the course ISSS608 - Visual Analytics and Applications.\nThis is a work in progress, keep track of the updates."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01.html",
    "title": "Data Visualization Makeover 01",
    "section": "",
    "text": "The objective is to create Age-Sex Pyramid Analytic Visualization to accurately describe the demographic of Singapore. It is a common visual representation to contrast and sub sect the population based on different classifiers, commonly by gender and age. To further illustrate the visualization, multiple Age-Sex Pyramids will be plotted by planning area using the trellis display. \nThe visualization is created using the Singapore Residents by Planning Area / Sub-zone, Age Group, Sex and Type of Dwelling, June 2022 (Singstat)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#clarity",
    "href": "Take-home_Ex/Take-home_Ex01.html#clarity",
    "title": "Data Visualization Makeover 01",
    "section": "Clarity",
    "text": "Clarity\n\na. Lack of Header and Titles\nThere is no title to explain the context of the visual. Users would not know the message of the visual at first glance. While an age sex pyramid is a common visual tool to indicate a split in gender population, it is not clear which population is being discussed unless the user is aware of the Planning Areas. Furthermore, though indicated as 2022 at the x-axis, it would have been clearer if it is included in the header or title. A simple title such as 2022 Singapore Age – Sex Pyramid would be enough to communicate the topic of the visual.\n\n\nb. Lack of Color Labels\nThe color of the back-to-back horizontal bar chart is the same between male and female values. This may confuse users as it may give the wrong impression that both bars may belong to a single elongated bar. It is proposed that color for both male and female to be separate and distinct, even if in the terms of different shade."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#aesthetic",
    "href": "Take-home_Ex/Take-home_Ex01.html#aesthetic",
    "title": "Data Visualization Makeover 01",
    "section": "Aesthetic",
    "text": "Aesthetic\n\nc. Poor Layout\nThe Trellis chart is organized horizontally and side by side and as such is visually difficult to read as there is an estimated 55 Planning Areas to scroll from. This difficult extends also to comparing multiple charts as there is only so much that can be shown per plane. It is recommended to create a table like trellis chart with rows and columns as to ease visualization and maximize space. \n\n\nd. Lack of differentiating color per Area\nSimilar to the back to back horizontal bar, the color between planning areas are also the same. To improve aesthetic, it is recommended that Planning Areas will have the same color while male to female bars with share the same color but of different shades.\n\n\ne. Too many Age Groups\nThe is an overall 19 age gaps that extends the chart and limits the number of planes that can be shown per window. It is recommended to group together the different age groups from 5 years to 10 years thus reducing the y axis by half and increase the number of charts that can be seen in one viewing."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#interactive",
    "href": "Take-home_Ex/Take-home_Ex01.html#interactive",
    "title": "Data Visualization Makeover 01",
    "section": "Interactive",
    "text": "Interactive\nThere is an opportunity to create filters to limit and focus the dashboard to a select Area, Subzone and Dwelling Type. This opportunity can allow for a more interactive and dynamic analysis."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#clarity-1",
    "href": "Take-home_Ex/Take-home_Ex01.html#clarity-1",
    "title": "Data Visualization Makeover 01",
    "section": "Clarity",
    "text": "Clarity\n\na. Proper Titles and Headers\nThe Age-Sex Pyramid Trellis Chart is titled correctly, indicating as 2022 Singapore Age-Sex Pyramid per Area. Furthermore, each Age-Sex Pyramid is labeled per Planning Area at the bottom right-hand corner of each plane. These labels ensure that users can properly read and identify the overall message of the chart and category of each individual pyramid. \nIt may be recommended to add value labels per bar to textually visualize the amount each chart, yet this step can be avoid as the chart allows for pop out labels and values to appear when hovering over the chart. Furthermore, on the design aspect, value labels will clutter the chart and cause it to be overly noisy. \n\n\nb. Differentiated Color Labels\nMale-Female bar colors are identified with different shades with the lighter colors indicating male and darker as female. This ensures visual differentiation between genders with ensuring some similarity within planning area."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#aesthetic-1",
    "href": "Take-home_Ex/Take-home_Ex01.html#aesthetic-1",
    "title": "Data Visualization Makeover 01",
    "section": "Aesthetic",
    "text": "Aesthetic\n\nc. 3 Column Tabular Trellis Chart\nThe Trellis Chart is organized to 3 columns to ensure that the pyramids are visually maximized both in terms of the number of pyramid charts in one viewing and the max value of the y-axis for the bars to be visually district.\n\n\nd. Differentiating Color per Area\nColors per Planning Area is colored differently to ensure distinct differentiation per pyramid. \n\n\ne. Simplified Age Groups\n19 age groups are reduced to 10 age groups to visually maximize the space of the plane without oversimplifying the data points."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#interactive-1",
    "href": "Take-home_Ex/Take-home_Ex01.html#interactive-1",
    "title": "Data Visualization Makeover 01",
    "section": "Interactive",
    "text": "Interactive\nThe Trellis Chart can be filtered per Planning Area, Subzone and Type of Dwelling. This ensures interactive use of the chart and allow for more drilled down analysis of the data. Though there is a limitation as this chart cannot compare Subzones within the same Planning Area as can be an improvement for future developments."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01.html#major-findings",
    "href": "Take-home_Ex/Take-home_Ex01.html#major-findings",
    "title": "Data Visualization Makeover 01",
    "section": "Major Findings",
    "text": "Major Findings\n\nOverall, Singapore has more females than males by est. 500,000 heavily contributed by the adult (25 and above) age group. Male population is 11 million while Female is 11.5 million. This is a stark contrast from previous years as there are more males in Singapore than females, average ratio at 53% male and 47% female. The shift in population shares maybe due to migration and the impact of COVID lockdown as male manpower migrating to the city state decreased during COVID and has not recovered since. \nMale and Female distribution per Planning Area and age group are almost equal except for the senior population. The close distribution maybe due to the equal economic opportunity for both genders in Singapore. Furthermore, top areas that are heavily populated by males are populated by females as well. \nThe data may be incomplete as 26 out of 55 (48%) of Total Planning Area have either no data or negligible data. This is evident that some area’s population data is missing and is not only limited to far east and far west areas such as Tuas, but high population city center such as Orchard has no data recorded as well. \n\nDashboard Link: https://public.tableau.com/views/DataVizMakeover01_16743910439700/TotalSingapore?:language=en-US&publish=yes&:display_count=n&:origin=viz_share_link"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02.html",
    "title": "Data Visualization Makeover 02",
    "section": "",
    "text": "The objective of this exercise is to critique and improve an Age-Sex Pyramid Analytic Visualization of Singapore of the year 2022. The output is to recreate a Trellis Chart Age-Sex Pyramid through R-Studios by using ggplot2, ggplot2 extensions and tidyverse packages.\nThe visualization is created using the Singapore Residents by Planning Area / Sub-zone, Age Group, Sex and Type of Dwelling, June 2022 (Singstat).\n\n\n\n\n\n\nNote\n\n\n\nThe output should be focused as a static Trellis Chart without filter interactivity."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#clarity",
    "href": "Take-home_Ex/Take-home_Ex02.html#clarity",
    "title": "Data Visualization Makeover 02",
    "section": "Clarity",
    "text": "Clarity\n\nThe Original Visualization shows 2 separate Age-Pyramid Trellis Chart that shows the same message. Two sets of visualization normally indicate that they visualize two different messages that may it be independent of each other or connected. The issue with the dashboard is that both sets indicate the same message just in a different format. This raises either confusion to the reader and a form of redundancy that can be best allocated to something else.\n3x3 Trellis Chart limits the visualization to only 9 Age-Sex Pyramids. Limited and focused visualizations are normally selected under a criteria. This criteria may be in terms of highest population cumulative or selective. The original visualization shows no indication of the criteria chosen to only visualize 9 areas and may only be concluded as a random selection.\n3x3 Trellis Chart lacks y-axis labels. Taking to consideration that the Trellis Charts is a stand alone visualization, the lack of y-axis label reduces the clarity of the y-axis values. Furthermore, both Trellis Charts lack x-axis values and labels but make up for it through text values per bar. In terms of clarity, one can argue that the lack of x-axis may confuse the reader due to the text values having no reference while others say the taxt vales are enough to compensate the lack of x-axis."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#aesthetic",
    "href": "Take-home_Ex/Take-home_Ex02.html#aesthetic",
    "title": "Data Visualization Makeover 02",
    "section": "Aesthetic",
    "text": "Aesthetic\n\nText Values center bar alignment makes reading the values difficult. Due to the mismatched alignment of the text values brought abut by the central alignment placement in the bar chart makes reading the values difficult as the reader cannot simply scroll down and read the values, not mention creates unnecessary confusion in the graph.\nText Values on each Bar Chart overwhelms the visualization. More than the mismatch alignment, the number of the text values in the chart saturates the charts and makes it “noisy”. The text values fill the dashboard with a lot of numbers that is makes the labels and visuals difficult to look at and interpret.\nHorizontally arranged Trellis Chart limits and squeezes the Age-Sex Pyramids. This visualization arrangement artificially contorts the bar length due to the lack of width space. The squeeze minimizes the visual differentiation between bar charts as such creates an illusion that some bars are of the same size."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Take-home_Ex/Take-home_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Data Visualization Makeover 02",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nBefore we get started, it is important for us to ensure that the required R packages have been installed.\n\npacman::p_load(tidyverse,ggplot2,knitr, plotly, skimr, questionr, funModeling, sf, tmap, quanteda, NLP)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex02.html#importing-data",
    "title": "Data Visualization Makeover 02",
    "section": "Importing Data",
    "text": "Importing Data\nThis code chunk is to import the data from respopagesextod2022.csv file to the Quarto/R page.\n\npop_data <- read_csv(\"data/respopagesextod2022.csv\")\n\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThe CSV File contains the following columns:\n\n\n\n\n\n\n\n\nCOLUMN NAME\nDATA TYPE\nDESCRIPTION\n\n\n\n\nPlanning Area (PA)\nCharacter\nDistinct Planning Areas in Singapore designated and mapped by the Government of Singapore\n\n\nSubzone (SZ)\nCharacter\nSub-areas within each Planning Areas\n\n\nAge Group (AG)\nCharacter\nSets of population age group by 5 (ex 0-4, 5-9, etc)\n\n\nSex\nCharacter\nBinary biological identifier of gender\n\n\nType of Dwelling (TOD)\nCharacter\nAvailable dwelling types in Sinagpore\n\n\nPopulation (Pop)\nNumerical\nPopulation per category\n\n\nTime\nNumerical\nYear -> 2022"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#data-exploration-and-cleaning",
    "href": "Take-home_Ex/Take-home_Ex02.html#data-exploration-and-cleaning",
    "title": "Data Visualization Makeover 02",
    "section": "Data Exploration and Cleaning",
    "text": "Data Exploration and Cleaning\nThis section is to check incorrect and missing values in the data set.\n\nskimr::skim(pop_data)\n\n\nData summary\n\n\nName\npop_data\n\n\nNumber of rows\n100928\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nPA\n0\n1\n4\n23\n0\n55\n0\n\n\nSZ\n0\n1\n4\n29\n0\n332\n0\n\n\nAG\n0\n1\n6\n11\n0\n19\n0\n\n\nSex\n0\n1\n5\n7\n0\n2\n0\n\n\nTOD\n0\n1\n6\n39\n0\n8\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPop\n0\n1\n40.44\n125.73\n0\n0\n0\n20\n2300\n▇▁▁▁▁\n\n\nTime\n0\n1\n2022.00\n0.00\n2022\n2022\n2022\n2022\n2022\n▁▁▇▁▁"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#exploration-of-y-axis-data",
    "href": "Take-home_Ex/Take-home_Ex02.html#exploration-of-y-axis-data",
    "title": "Data Visualization Makeover 02",
    "section": "Exploration of y-axis Data",
    "text": "Exploration of y-axis Data\n\nExp1 <- pop_data %>% \n  filter(PA == \"Ang Mo Kio\") %>%\n  group_by(AG, Sex) %>%\n  summarise(`sum_pop` = sum(`Pop`), n = n()) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'AG'. You can override using the `.groups`\nargument.\n\n\n\nggplot(data = Exp1,\n       aes(y = AG)) +\n  geom_bar() +\n  theme_bw() +  \n  ggtitle(\"Test: Age Group Distribution\") \n\n\n\n\nBased on the y-axis (Age Group), 2 issues are noticed:\n\nEach Age Group is written with an underscore (“_”) instead of a space in between each word/number\nThe values are organized alphabetically with consideration of the starting value (number or alphabet). As such “5_to_9” came before “45_to_49”\n\n\nCorrecting Age Labels\n\npop_data$AG <- gsub(\"_\", \" \", pop_data$AG, fixed = TRUE)\n\n\n\nCorrecting Sequence\n\nage_correct <- c(\"0 to 4\", \"5 to 9\", \"10 to 14\", \"15 to 19\", \"20 to 24\", \"25 to 29\", \"30 to 34\", \"35 to 39\", \"40 to 44\", \"45 to 49\", \"50 to 54\", \"55 to 59\", \"60 to 64\", \"65 to 69\", \"70 to 74\", \"75 to 79\", \"80 to 84\", \"85 to 89\", \"90 and over\")\n\npop_sg <- pop_data %>%\n  group_by(AG, Sex) %>%\n  summarise(`sum_pop` = sum(`Pop`)) %>%\n  mutate(AG = factor(AG, levels = age_correct)) %>%\n  arrange(AG) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'AG'. You can override using the `.groups`\nargument.\n\npop_sg <- pop_sg %>%\n  mutate(pct = scales::percent((sum_pop/sum(sum_pop)), accuracy = 0.01),\n         res = str_c(sum_pop, \", \", pct))\n\npop_pa <- pop_data %>%\n  group_by(PA, AG, Sex) %>%\n  summarise(`sum_pop` = sum(`Pop`)) %>%\n  mutate(AG = factor(AG, levels = age_correct)) %>%\n  arrange(AG) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'PA', 'AG'. You can override using the\n`.groups` argument.\n\npop_pa <- pop_pa %>%\n  mutate(pct = scales::percent((sum_pop/sum(sum_pop)), accuracy = 0.01),\n         res = str_c(sum_pop, \", \", pct))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02.html#removing-planning-areas-without-values",
    "href": "Take-home_Ex/Take-home_Ex02.html#removing-planning-areas-without-values",
    "title": "Data Visualization Makeover 02",
    "section": "Removing Planning Areas without Values",
    "text": "Removing Planning Areas without Values\nIt was previously identified that 26 out of 55 Planning Areas have no value/data. To maximize space, 9 Planning Areas will be retained and filtered.\n\n\n\n\n\n\nNote\n\n\n\nDue to the limitations of space in r generated visualization in quarto only a limited number of planning areas can be shown\n\n\n\nt_pop_pa <- pop_data %>%\n  group_by(PA) %>%\n  summarise(`sum_pop` = sum(`Pop`)) %>%\n  ungroup()\n\ntrellis9 <- arrange(t_pop_pa, desc(t_pop_pa$sum_pop)) %>%\n  slice(1:9) %>%\n  select(PA)\n\ntrellis9_filter <- pop_pa %>%\n  filter(pop_pa$PA %in% trellis9$PA)\n\n\n\nPA_Pyr <- ggplot() +\n  geom_bar(data = subset(trellis9_filter, \n                         Sex == \"Males\"), \n           aes(x = AG, \n               y = -sum_pop, \n               fill = PA),\n           stat = \"identity\", \n           fill = \"#2E9598\") +\n  geom_bar(data = subset(trellis9_filter, \n                         Sex == \"Females\"), \n           aes(x = AG, \n               y = sum_pop, \n               fill = PA), \n           stat = \"identity\", \n           fill = \"#EC1B4B\") +\n  coord_flip() +\n  facet_wrap(.~ PA,\n             drop = FALSE, \n             ncol = 3,\n             scales = \"fixed\") +\n  scale_y_continuous(limits = c(-13000, 13000),\n                     expand = expansion(mult = c(0, .04))) +\n  labs (y = \"Population\", \n        x = \"Age Group\",\n        fill = \"Gender\",\n        title = \"Singapore Population Pyramid 2022\",\n        subtitle = \"Distribution of gender and age groups per planning area\",\n        caption = \"Data Source : Singstat.gov.sg, June 2022\") +\n  theme_bw() +\n  theme(plot.title = element_text(size = 14, \n                                  colour = \"#424242\",\n                                  face = \"bold\",\n                                  hjust = 0.5),\n        plot.subtitle = element_text(size = 8,\n                                     colour = \"#424242\",\n                                     hjust = 0.5),\n        plot.caption = element_text(size = 8,\n                                    colour = \"#424242\",\n                                    hjust = 0),\n        strip.text = element_text(size = 7,\n                                  colour = \"#424242\"),\n        strip.background = element_blank(),\n\n        axis.ticks = element_line(colour = \"#424242\",\n                                  linewidth = 0.3),\n        axis.ticks.x = element_blank(),\n        axis.title.y = element_text(angle = 0, \n                                    size = 8, \n                                    colour = \"#424242\",\n                                    vjust = 1.07,\n                                    hjust = 0.8,\n                                    margin = margin(r = -40, l = 20)),\n        axis.title.x = element_text(size = 8, \n                                    colour = \"#424242\"),\n        axis.text.x = element_blank(),\n        axis.text.y = element_text(size = 7,\n                                   colour = \"#424242\"),\n        legend.position = \"bottom\",\n        legend.justification = \"left\",\n        legend.text = element_text(size = 7,\n                                   colour = \"#424242\"),\n        legend.title = element_text(size = 8, \n                                    colour = \"#424242\"),\n        panel.grid.major = element_line(linewidth = rel(0.5)),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#ffffff\"),\n        legend.background = element_rect(fill = \"#ffffff\"),\n        legend.margin = margin(t = -10),\n        panel.border = element_rect(colour = \"#424242\",\n                                    linewidth = 0.3)) \n\nPA_Pyr\n\n\n\n\n\n\nPA_Pyr <- ggplot() +\n  geom_bar(data = subset(trellis9_filter, \n                         Sex == \"Males\"), \n           aes(x = AG, \n               y = -sum_pop, \n               fill = PA),\n           stat = \"identity\", \n           fill = \"#2E9598\") +\n  geom_bar(data = subset(trellis9_filter, \n                         Sex == \"Females\"), \n           aes(x = AG, \n               y = sum_pop, \n               fill = PA), \n           stat = \"identity\", \n           fill = \"#EC1B4B\") +\n  coord_flip() +\n  facet_wrap(.~ PA,\n             drop = FALSE, \n             ncol = 3,\n             scales = \"fixed\") +\n  scale_y_continuous(limits = c(-13000, 13000),\n                     expand = expansion(mult = c(0, .04))) +\n  labs (y = \"Population\", \n        x = \"Age Group\",\n        fill = \"Gender\",\n        title = \"Singapore Population Pyramid 2022\",\n        subtitle = \"Distribution of gender and age groups per planning area\",\n        caption = \"Data Source : Singstat.gov.sg, June 2022\") +\n  theme_bw() +\n  theme(plot.title = element_text(size = 14, \n                                  colour = \"#424242\",\n                                  face = \"bold\",\n                                  hjust = 0.5),\n        plot.subtitle = element_text(size = 8,\n                                     colour = \"#424242\",\n                                     hjust = 0.5),\n        plot.caption = element_text(size = 8,\n                                    colour = \"#424242\",\n                                    hjust = 0),\n        strip.text = element_text(size = 7,\n                                  colour = \"#424242\"),\n        strip.background = element_blank(),\n\n        axis.ticks = element_line(colour = \"#424242\",\n                                  linewidth = 0.3),\n        axis.ticks.x = element_blank(),\n        axis.title.y = element_text(angle = 0, \n                                    size = 8, \n                                    colour = \"#424242\",\n                                    vjust = 1.07,\n                                    hjust = 0.8,\n                                    margin = margin(r = -40, l = 20)),\n        axis.title.x = element_text(size = 8, \n                                    colour = \"#424242\"),\n        axis.text.x = element_blank(),\n        axis.text.y = element_text(size = 7,\n                                   colour = \"#424242\"),\n        legend.position = \"bottom\",\n        legend.justification = \"left\",\n        legend.text = element_text(size = 7,\n                                   colour = \"#424242\"),\n        legend.title = element_text(size = 8, \n                                    colour = \"#424242\"),\n        panel.grid.major = element_line(linewidth = rel(0.5)),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#ffffff\"),\n        legend.background = element_rect(fill = \"#ffffff\"),\n        legend.margin = margin(t = -10),\n        panel.border = element_rect(colour = \"#424242\",\n                                    linewidth = 0.3)) \n\nPA_Pyr"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03.html",
    "href": "In-Class_Ex/In-Class_Ex03.html",
    "title": "In-Class Exercise 03",
    "section": "",
    "text": "Two packages will be installed and loaded. They are tidyverse and ggiraph.\n\npacman::p_load(ggiraph, tidyverse)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03.html#graphs-and-visualization-through-ggplot2-and-ggiraph",
    "href": "In-Class_Ex/In-Class_Ex03.html#graphs-and-visualization-through-ggplot2-and-ggiraph",
    "title": "In-Class Exercise 03",
    "section": "Graphs and Visualization through ggplot2 and ggiraph",
    "text": "Graphs and Visualization through ggplot2 and ggiraph\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  }
]